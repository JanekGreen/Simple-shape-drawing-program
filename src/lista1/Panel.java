package lista1;


import java.awt.Color;
import java.awt.Dimension;
import java.awt.Graphics;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import javax.swing.JPanel;
import javax.swing.SwingUtilities;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author pawel
 */
public class Panel extends JPanel implements MouseListener{

    /**
     * Creates new form Panel
     * @param r
     */
     
     
    public Panel(Ramka r) {
        initComponents();
        setSize(new Dimension(450, 350));
        ramka = r;
        addMouseListener(this);
        
       
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    
 @Override
  protected void paintComponent(Graphics g)
  {
      super.paintComponent(g);
      setBackground(Color.white);
      for(Figura f: ramka.zwrocFigury())
          f.rysuj(g);
      
  }
  
  
   private Ramka ramka;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables

  
   
    
    @Override
    public void mouseClicked(MouseEvent e) {
       
           if(SwingUtilities.isLeftMouseButton(e))
         {
             switch(ramka.zwrocTypFigury())
             {
                 case 0:
                     ramka.dodajFigure(new Kwadrat(e.getX(), e.getY(), ramka.zwrocRozmiar().height, ramka.zwrocRozmiar().width,
                             ramka.zwrocKolor()));
                              break;  
                  case 1:
                     ramka.dodajFigure(new Okrag(e.getX(), e.getY(), ramka.zwrocRozmiar().height, ramka.zwrocRozmiar().width,
                             ramka.zwrocKolor()));
                              break;  
                             
                  case 2:
                       ramka.dodajFigure(new Trojkat(e.getX(), e.getY(), ramka.zwrocRozmiar().height, ramka.zwrocRozmiar().width,
                             ramka.zwrocKolor()));
                              break;   
                   case 3:
                        ramka.dodajFigure(new Szesciokat(e.getX(), e.getY(), ramka.zwrocRozmiar().height, ramka.zwrocRozmiar().width,
                             ramka.zwrocKolor()));
                              break;  
                      
             }
             
        
               repaint();
         }
               
    }

    @Override
    public void mousePressed(MouseEvent e) {
      
    }

    @Override
    public void mouseReleased(MouseEvent e) {
        
    }

    @Override
    public void mouseEntered(MouseEvent e) {
    }

    @Override
    public void mouseExited(MouseEvent e) {
        
    }
    
    public void odswierz()
    {
    
        repaint();
        
    
    }

  
    
    
}
