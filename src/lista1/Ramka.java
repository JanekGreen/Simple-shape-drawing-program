/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package lista1;

import java.awt.Color;
import java.awt.Dimension;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.io.PrintWriter;
import java.nio.file.Paths;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;


/**
 *
 * @author pawel
 */
public class Ramka extends javax.swing.JFrame implements ActionListener{

    /**
     * Creates new form Ramka
     */
    public Ramka() {
        initComponents();
        
        setSize(new Dimension(900, 700));
        ButtonZapisz.addActionListener(this);
        ButtonWczytaj.addActionListener(this);
        ButtonWyczysc.addActionListener(this);
        
        setTitle("Rysowanie Figur");
        kolor = new Color(0,0,0,0);
        figury = new ArrayList<>();
       
         
       
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new Panel(this);
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        ComboTypFigury = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        SliderRozmiar = new javax.swing.JSlider();
        jLabel3 = new javax.swing.JLabel();
        ComboKolor = new javax.swing.JComboBox();
        ButtonWczytaj = new javax.swing.JButton();
        ButtonZapisz = new javax.swing.JButton();
        ButtonWyczysc = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 512, Short.MAX_VALUE)
        );

        jLabel2.setText("Typ figury:");

        ComboTypFigury.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Kwadrat", "Okrąg", "Trójkąt", "Sześciokąt" }));

        jLabel1.setText("Rozmiar:");

        SliderRozmiar.setMaximum(200);
        SliderRozmiar.setMinimum(10);
        SliderRozmiar.setMaximumSize(new java.awt.Dimension(150, 41));

        jLabel3.setText("Kolor:");

        ComboKolor.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Czerwony", "Czarny", "Niebieski", "Pomarańczowy", "Zielony" }));

        ButtonWczytaj.setText("Wczytaj");

        ButtonZapisz.setText("Zapisz");

        ButtonWyczysc.setText("Wyczyść");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(ComboTypFigury, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(SliderRozmiar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(47, 47, 47)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(ComboKolor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 37, Short.MAX_VALUE)
                        .addComponent(ButtonZapisz)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(ButtonWczytaj)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(ButtonWyczysc)
                        .addContainerGap(160, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1)
                    .addComponent(jLabel3))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(ComboKolor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(ComboTypFigury, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(SliderRozmiar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(80, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(ButtonZapisz)
                            .addComponent(ButtonWczytaj)
                            .addComponent(ButtonWyczysc, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Ramka.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Ramka.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Ramka.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Ramka.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Ramka().setVisible(true);
            }
        });
    }
    
   
 
     public Color zwrocKolor()
     {
        
         
         switch(ComboKolor.getSelectedIndex()){
             
             
             
             case 0: kolor= Color.red;
                    break;
                     
             case 1: kolor= Color.black;
                     break;
             case 2: kolor= Color.blue;
                     break;
             case 3: kolor= Color.orange;
                     break;
             case 4: kolor=  Color.green;
                     break;
                 
         }
            return kolor;
     
     }
     
     public Dimension zwrocRozmiar()
     {
         
         return  new Dimension(SliderRozmiar.getValue(), SliderRozmiar.getValue());
     }
     public int zwrocTypFigury()
     {  
          
         return ComboTypFigury.getSelectedIndex();
     
     }
     
     public void dodajFigure(Figura f)
     {
     
         figury.add(f);
     
     }
     public ArrayList<Figura> zwrocFigury()
     {
     
         return  figury;
     
     }
    
   
    private void zapiszDoPliku_()
    {
       wybierz = new JFileChooser();
       int rezultat= wybierz.showDialog(this,"Wybierz");
       if (rezultat == wybierz.APPROVE_OPTION) {
            File plik = wybierz.getSelectedFile();
        
      FileOutputStream f = null;
      
       javax.swing.JFileChooser wybierz = new  javax.swing.JFileChooser();
       
      
        try {
            
            f = new FileOutputStream(plik);
            
          try (ObjectOutputStream out = new ObjectOutputStream(f)) {
              out.writeObject(figury);
          }
            
        } catch (FileNotFoundException ex) {
            Logger.getLogger(Ramka.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(Ramka.class.getName()).log(Level.SEVERE, null, ex);
        } finally {
            try {
                f.close();
            } catch (IOException ex) {
                Logger.getLogger(Ramka.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
   
    }
   }
    
    
    private void odczytajZPliku_()
    {
        FileInputStream fis = null;
        
         wybierz = new JFileChooser();
       int rezultat= wybierz.showDialog(this,"Wybierz");
       if (rezultat == wybierz.APPROVE_OPTION) {
            File plik = wybierz.getSelectedFile();
        try {
            
            
            
            fis = new FileInputStream(plik);
            
            ObjectInputStream input = new ObjectInputStream(fis);
            figury = (ArrayList<Figura>) input.readObject();
            
            fis.close();
            
            
        } catch (FileNotFoundException ex) {
            Logger.getLogger(Ramka.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException | ClassNotFoundException ex) {
            Logger.getLogger(Ramka.class.getName()).log(Level.SEVERE, null, ex);
        } finally {
            try {
                fis.close();
            } catch (IOException ex) {
                Logger.getLogger(Ramka.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
               
    
             ((Panel)jPanel2).odswierz();
    
    }
     
    }
     
    private Color kolor;
    private ArrayList<Figura> figury; 
    private PrintWriter zapis;
   
    
    private JFileChooser wybierz;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ButtonWczytaj;
    private javax.swing.JButton ButtonWyczysc;
    private javax.swing.JButton ButtonZapisz;
    private javax.swing.JComboBox ComboKolor;
    private javax.swing.JComboBox ComboTypFigury;
    private javax.swing.JSlider SliderRozmiar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    // End of variables declaration//GEN-END:variables

    @Override
    public void actionPerformed(ActionEvent e) {
       
       if(e.getSource() == ButtonZapisz) 
        zapiszDoPliku_();      
       else
           
       if(e.getSource() == ButtonWczytaj)
       {
           odczytajZPliku_();
       
       }
        else
       
        if(e.getSource() ==ButtonWyczysc)
        {
            figury.clear();
           ((Panel)jPanel2).odswierz();
           
       
        }
        
    }

}
